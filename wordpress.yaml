# wordpress.yml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: wordpress-efs-pv
spec:
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: efs-sc
  csi:
    driver: efs.csi.aws.com
    volumeHandle: <FILE SYSTEM ID> # this should be your <FILE SYSTEM ID> for EFS
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wordpress-efs-uploads-pvc
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: efs-sc
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: wordpress-service
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  type: NodePort
  selector:
    app: wordpress
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress-deployment
  labels:
    app: wordpress
spec:
  replicas: 3
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      containers:
        - image: wordpress:5.5-apache
          name: wordpress
          resources:
            requests:
              memory: 256Mi
              cpu: 250m
            limits:
              memory: 512Mi
              cpu: 500m
          env:
            - name: PHP_MAX_POST_SIZE
              value: 1024M
            - name: WORDPRESS_DB_HOST
              valueFrom:
                secretKeyRef:
                  name: wordpress-db
                  key: host
            - name: WORDPRESS_DB_NAME
              valueFrom:
                secretKeyRef:
                  name: wordpress-db
                  key: name
            - name: WORDPRESS_DB_USER
              valueFrom:
                secretKeyRef:
                  name: wordpress-db
                  key: username
            - name: WORDPRESS_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wordpress-db
                  key: password
            - name: WORDPRESS_AUTH_KEY
              valueFrom:
                secretKeyRef:
                  name: wordpress-salts
                  key: auth_key
            - name: WORDPRESS_SECURE_AUTH_KEY
              valueFrom:
                secretKeyRef:
                  name: wordpress-salts
                  key: secure_auth_key
            - name: WORDPRESS_LOGGED_IN_KEY
              valueFrom:
                secretKeyRef:
                  name: wordpress-salts
                  key: logged_in_key
            - name: WORDPRESS_NONCE_KEY
              valueFrom:
                secretKeyRef:
                  name: wordpress-salts
                  key: nonce_key
            - name: WORDPRESS_AUTH_SALT
              valueFrom:
                secretKeyRef:
                  name: wordpress-salts
                  key: auth_salt
            - name: WORDPRESS_SECURE_AUTH_SALT
              valueFrom:
                secretKeyRef:
                  name: wordpress-salts
                  key: secure_auth_salt
            - name: WORDPRESS_LOGGED_IN_SALT
              valueFrom:
                secretKeyRef:
                  name: wordpress-salts
                  key: logged_in_salt
            - name: WORDPRESS_NONCE_SALT
              valueFrom:
                secretKeyRef:
                  name: wordpress-salts
                  key: nonce_salt
            - name: AWS_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: s3-user
                  key: access_key
            - name: AWS_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: s3-user
                  key: secret_key
            - name: WORDPRESS_CONFIG_EXTRA
              value: >
                define( 'AS3CF_SETTINGS', serialize( array(
                  'provider' => 'aws',
                  'access-key-id' => getenv('AWS_ACCESS_KEY'),
                  'secret-access-key' => getenv('AWS_SECRET_KEY'),
                ) ) );
                define( 'WP_AUTO_UPDATE_CORE', false );
          ports:
            - containerPort: 80
          volumeMounts:
            - name: wordpress-efs-uploads
              mountPath: /var/www/html
      volumes:
        - name: wordpress-efs-uploads
          persistentVolumeClaim:
            claimName: wordpress-efs-uploads-pvc
